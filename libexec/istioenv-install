#!/usr/bin/env bash
# Usage: istioenv install <version>
# Summary: Install the specified version of istio

[ -n "${ISTIOENV_DEBUG}" ] && set -x
source ${ISTIOENV_ROOT}/libexec/helpers.sh

[ "${#}" -gt 1 ] && error_and_die "usage: istioenv install [<version>]"

declare version

if [ -z "${1}" ]; then
  version_file="$(istioenv-version-file)"
  if [ "${version_file}" != "${ISTIOENV_ROOT}/version" ]; then
    version="$(cat ${version_file} || true)"
  fi
else
  version="${1}"
fi

ISTIO_REPO='https://api.github.com/repos/istio/istio/releases'
test "$1" == "--list" -o "$1" == "-l" && {
  eval which {wget,curl,jq} &>/dev/null || { echo Please install wget,curl,jq ; exit 0; }
  next="${ISTIO_REPO}?simple=yes&per_page=100&page="
  page="1"
  while true; do
    versions=$(wget -qO- "${next}${page}" | jq -r '.[].tag_name')
    echo $versions
    export next=$(curl -sSLIvk "${next}${page}" 2>&1 | grep -m1 link | sed 's|.*page=\(.*\)>;|\1|g'|xargs -n1 )
    echo $next
    page=$(cut -d' ' -f1 <<<$next)
    grep -q last <<<${next} && break
  done
  exit 0
}

dst_path="${ISTIOENV_ROOT}/versions/${version}"
if [ -f "${dst_path}/istio" ]; then
  echo "istio v${version} is already installed"
  exit 0
fi

info "Installing istio v${version}"
mkdir -p "${dst_path}" || error_and_die "Failed to make directory ${dst_path}"

( cd ${dst_path} ; wget -qO- https://istio.io/downloadIstio | ${version:+ISTIO_VERSION=$version} TARGET_ARCH=$(uname -m) sh - || error_and_die "Install failed" )
ln -svnf ${dst_path} $HOME/.istio

info "Installation of istio v${version} successful"
